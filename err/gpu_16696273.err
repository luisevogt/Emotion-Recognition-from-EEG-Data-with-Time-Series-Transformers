Loaded module: cuda/11.7
/zhome/40/6/202141/.lsbatch/1684154865.16696273.shell: line 31: /appl/cuda/11.7.0/samples/bin/x86_64/linux/release/deviceQuery: No such file or directory
WARNING: Value for scheme.headers does not match. Please report this to <https://github.com/pypa/pip/issues/9617>
distutils: /appl/python/3.10.7/include/python3.10/UNKNOWN
sysconfig: /appl/python/3.10.7/include/python3.10
WARNING: Additional context:
user = False
home = None
root = None
prefix = None
WARNING: Value for scheme.headers does not match. Please report this to <https://github.com/pypa/pip/issues/9617>
distutils: /zhome/40/6/202141/.local/include/python3.10/UNKNOWN
sysconfig: /zhome/40/6/202141/.local/include/python3.10
WARNING: Additional context:
user = True
home = None
root = None
prefix = None
WARNING: You are using pip version 21.1; however, version 23.1.2 is available.
You should consider upgrading via the '/appl/python/3.10.7/bin/python3 -m pip install --upgrade pip' command.
/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py:560: UserWarning: This DataLoader will create 2 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/SelectedCrossTransformer.py:66: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.cls_pos_embedding = nn.Parameter(torch.tensor(get_cls_pos_encoding(1, hidden_dim)))
  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:18<?, ?it/s]
Traceback (most recent call last):
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/main.py", line 79, in <module>
    model.learn(train=train_loader, validate=vali_loader, test=test_loader, epochs=config_dict['train_epochs'],
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/base_model.py", line 126, in learn
    _y = self(X)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/SelectedCrossTransformer.py", line 107, in forward
    enc_out = self.encoder(x_seq)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/crossformer/cross_encoder.py", line 114, in forward
    x = block(x)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/crossformer/cross_encoder.py", line 87, in forward
    x = layer(x)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/crossformer/attn.py", line 125, in forward
    dim_buffer = self.dim_sender(batch_router, dim_send, dim_send)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/crossformer/attn.py", line 60, in forward
    out = self.inner_attention(
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/40/6/202141/Emotion-Recognition-from-EEG-Data-with-Time-Series-Transformers/model/crossformer/attn.py", line 25, in forward
    scores = torch.einsum("blhe,bshe->bhls", queries, keys)
  File "/zhome/40/6/202141/.local/lib/python3.10/site-packages/torch/functional.py", line 378, in einsum
    return _VF.einsum(equation, operands)  # type: ignore[attr-defined]
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 118.00 MiB (GPU 0; 31.74 GiB total capacity; 30.31 GiB already allocated; 19.62 MiB free; 30.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
